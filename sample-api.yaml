swagger: '2.0'
info:
  version: '1.0.0'
  title: "[Onboarding] Adidas Wishlist API"
  contact:
      name: "Andrzej Jarzyna"
      email: "andrzej.jarzyna@adidas.com"

  # TODO: Update contact details and change the title to include your name.

  description: |
    A Simple adidas product API for the On-Boarding deep-dive.
    [On-Boarding trainings](https://tools.adidas-group.com/confluence/display/DSBP/Engineers+On-Boarding+trainings) hackathon

    ## Affordances
    This API affords the following actions:
    - Retrieve the list of products
    - Retrieve the metadata related to products (tags, status, categories)
    - Retrieve a single product
    - Create a product
    - Update an existing product (status...)
    - Retrieve reviews about a product
    - Add a product review
    - Create a user
    - Retrieve user profile
    - Retrieve the user wishlist
    - Add a product into the wishlist
    - Delete a specific product from the wishlist
    - Clear the wishlist

# What are the mime types the API can return (https://tools.ietf.org/html/rfc6838#section-4.2.8)
produces:
  - application/hal+json      # Representation message format
  - application/problem+json  # Error message format
  
host: "example.com"

schemes:
  - https

paths:
  /:
    x-summary: Wishlist

    get:
      summary: API Root
      description: Retrieve the API Root

      responses:
        200:
          description: The root of the API
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halRoot'

  /products:
    x-summary: List of Products

    get:
      summary: List of Products
      description: Retrieve the whole list of products
      parameters:
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/offsetParam'
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/tagsParam'
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/categoryParam'
        # TODO - Add:
        # limit parameter
        # status parameter
      responses:
        200:
          description: The list of Products
          # TODO: the response follows the halProducts object model schema.
      security:
        - oauth2:
          - 'read:products'

    post:
      summary: New Product
      description: Create a new product
      consumes:
        - application/json
      parameters:
        - name: Product
          in: body
          description: Product to be created
          required: true
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/product'
      responses:
        201:
          description: Newly created product
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halProduct'
      security:
        - oauth2:
          - 'write:products'
          
  /products/metadata:
    get:
      summary: Retrieve Products Metadata
      description: Retrieve all products metadata
      responses:
        '200':
          description: 'All products metadata (categories, status, tags)'
          schema:
            $ref: 'https://design.api.3stripes.io/v1/domains/adidas/wishlist-models/1.0.0#/definitions/halProductMetadata'
            
  /products/{product_id}:
    x-summary: Product

    parameters:
      - name: product_id
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'

    get:
      summary: Get Product
      description: Retrieve product details
      responses:
        200:
          description: A particular Product
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halProduct'
        404:
          description: The requested Product wasn't found
          headers:
            Content-Type:
              type: string
              default: application/problem+json
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/productNotFound'
      security:
        - oauth2:
          - 'read:products'

    patch:
      summary: Update Product
      description: Update product details
      consumes:
        - application/json
      parameters:
        - name: Product
          in: body
          description: Partial Product update
          required: true
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/productPatch'
      responses:
        200:
          description: The Product was updated
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halProduct'
      security:
        - oauth2:
          - 'write:products'

  /products/{product_id}/reviews:

    x-summary: List of Product Reviews

    parameters:
      - name: product_id
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'

    get:
      summary: List product reviews
      description: Retrieve a list of product reviews
      parameters:
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/offsetParam'
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/limitParam'
      responses:
        200:
          description: The list of Product review
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halReviews'
      security:
        - oauth2:
          - 'read:reviews'

    post:
      summary: Create product review
      description: Create a new product review
      consumes:
        - application/json
      parameters:
        - name: Review
          in: body
          description: Review to be created
          required: true
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/review'
      responses:
        201:
          description: Newly created product
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halReview'
      security:
        - oauth2:
          - 'write:reviews'

  /products/{product_id}/reviews-stats:

    x-summary: List of Product Reviews Stats

    parameters:
      - name: product_id
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'

    get:
      summary: List product reviews stats
      description: Retrieve a list of product reviews statistics
      parameters:
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/offsetParam'
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/limitParam'
        - $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/parameters/granularityParam'
      responses:
        200:
          description: The list of Product review
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halReviewsStats'
      security:
        - oauth2:
          - 'read:reviews:stats'

  /users:
    x-summary: Users

    # TODO: Create a post operation for creating a new user. Remember about summary and description fields. The API will consume a JSON file. In the body you will be sending a user object. This parameter is required. A successful operation returns an appropriate HTML response code and contains hypermedia information. The security protocol is oauth2 and the requester needs write rights on the user.

  /users/{user_id}:

    parameters:
      - name: user_id
        in: path
        description: Id of the User
        required: true
        type: string
        x-example: 'xxxxx'

    get:
      summary: User Profile
      description: Retrieve user profile details
      responses:
        200:
          description: A particular User Profile
          schema:
            $ref: 'http://design.api.3stripes.io/v1/domains/adidas/onboarding-wishlist-models/1.0.0#/definitions/halUser'
      security:
        - oauth2:
          - 'read:users'


  # TODO: Create an endpoint for user's wishlist. It will have a method for retrieving it, method for adding a product to it and a method to clear the wishlist (you can clear it in two ways which are semantically correct). Remember about sending at least one path parameter for all of those requests. Which response codes are appropriate for each of the requests?

  /users/{user_id}/wishlist/{product_id}:
    x-summary: User Product Wishlist

    parameters:
      - name: user_id
        in: path
        description: Id of the User
        required: true
        type: string
        x-example: '32312'

      - name: product_id
        in: path
        description: Id of the Product
        required: true
        type: string
        x-example: 'DB1124'
        
    delete:
      summary: Delete a product from the wishlist
      description: Delete a product from user wishlist
      responses:
        204:
          description: Wishlist cleared
      security:
        - oauth2:
          - 'write:wishlist'

securityDefinitions:
  oauth2:
    type: oauth2
    authorizationUrl: 'http://example/oauth'
    description: |

      There are three available roles in the application:

        - Anonymous -> can log in, log out, see products, see general ratings from a product.
        - User -> all from Anonymous + following scopes: write:wishlist, read:reviews, write:reviews.
        - Admin -> all from Anonymous + following scopes: write:products, read:reviews, read:reviews:stats, read:users, write:users.
    flow: implicit
    scopes:
      'read:products': read all products 
      'write:products': modify products      
      'write:wishlist': modify your wishlist
      'read:wishlist': read your wishlist
      'read:reviews': read all reviews
      'write:reviews': write reviews
      'read:reviews:stats': read review statistics
      'read:users': read users
      'write:users': modify users
